name: Publish to test environment

on:
  push:
    branches: [ test ]
#  pull_request:
#    branches: [ master ]

env:
  solutionFile: TeamOps.Ui.Wasm.sln
  projectFolder: src/TeamOps.Ui.Wasm
  publishFolder: publish/TeamOps.Ui.Wasm

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.300
    - name: Build the client assets
      run: | 
        cd ${{env.projectFolder}}/Build
        npm install
        npm run build-github
        cd ../wwwroot
        echo "* binary" > .gitattributes
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build ${{env.solutionFile}} -c Release --no-restore
    - name: Publish
      run: dotnet publish ${{env.solutionFile}} -c Release --no-build --no-restore -o ${{env.publishFolder}}
#    - name: Test
#      run: dotnet test --no-restore --verbosity normal
#    - name: Update the published assets for this environment
#      run: | 
#        cd publish/wwwroot
#        mv -v index.gh-pages.html index.html
#        for f in _framework/_bin/*; do mv "$f" "`echo $f | sed -e 's/\.dll\b/.wasm/g'`"; done
#        sed -i 's/\.dll"/.wasm"/g' _framework/blazor.boot.json
    - name: Install SSH Client ðŸ”‘
      uses: webfactory/ssh-agent@v0.2.0
      with:
        ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY_KEY_TEST }}
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        GIT_CONFIG_EMAIL: ghidello@users.noreply.github.com
        COMMIT_MESSAGE: Publish the test site
        CLEAN: true
        REPOSITORY_NAME: sotsera/test.teamops.online
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: ${{env.publishFolder}}/wwwroot # The folder the action should deploy.
    - name: Purge cache
      uses: jakejarvis/cloudflare-purge-action@master
      env:
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_CACHE }}
